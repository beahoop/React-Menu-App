{"version":3,"sources":["components/MenuList.js","components/OrderContainer.js","MenuApp.js","reportWebVitals.js","index.js"],"names":["MenuList","props","state","selection","menuItems","this","filter","menuItem","foodSelection","type","map","index","className","name","title","desciption","price","toFixed","data-title","onClick","addOrderItem","Component","OrderContainer","text","handleSubmit","bind","handleInput","event","preventDefault","order","console","log","localStorage","setItem","JSON","stringify","alert","setState","target","value","total","orderItem","count","reduce","totalPrice","currentPrice","orderItems","minusOrderItem","removeOrderItem","htmlFor","id","placeholder","onChange","required","MenuApp","types","filterFood","findIndex","push","indexOf","splice","foodType","dataset","menuTypes","foodtype","data-type","src","alt","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.630b8423.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass MenuList extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    selection: null,\n  }\n}\n\n\n    render() {\n      const menuItems = this.props.menuItems\n      .filter(menuItem => {\n        if (this.props.foodSelection === \"All\") {\n          return menuItem;\n        }\n          else {\n          return menuItem.type === this.props.foodSelection\n          }\n        }\n        ) //it takes a place holder... to say place in each item form the array\n      //now look for placeholder.type... here I am doing a truly check.\n      .map((menuItem, index) => (\n          <li key={index} className = \"menuItem-item\" >\n          <div className=\"menuItem-div\">\n          <p className=\"menuList-title\" name=\"title\"> {menuItem.title} </p>\n          <p className=\"menuList-desc\" name=\"desciption\" > {menuItem.desciption} </p>\n            <span className=\"menuList-price\" name=\"price\">${menuItem.price.toFixed(2)}</span>\n            <button type=\"submit\" data-title={menuItem.title} onClick={() => this.props.addOrderItem(menuItem)}>Add</button>\n\n\n          </div>\n           </li>\n        ))\n        return(\n          <>\n\n          <ul className=\"menuItem-list\"> { menuItems }\n\n          </ul>\n\n\n        </>\n        )\n      }\n    }\n\nexport default MenuList;\n","import { Component } from 'react';\n\nclass OrderContainer extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    text: \"\",\n  }\n\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.handleInput = this.handleInput.bind(this);\n\n  }\n\nhandleSubmit(event){\n  event.preventDefault();\n  const order = {\n    name: this.state.text,\n    order: [...this.props.order]\n  }\n  console.log('order', order);\n  localStorage.setItem(\"order\", JSON.stringify(order));\n  alert(`Thank you ${this.state.text} for your order! Your order will be ready for pick up in 25 mintues.`);\n}\n\n//if thse things already exsit then add a number to it not\n// 1: {this.order: 2};\nhandleInput(event){\n  this.setState({ [event.target.name]: event.target.value });\n  //event.target.name is targeting the name=\"text\" on the input\n}\n\n\n  render() {\n\n    const reducer = (totalPrice, currentPrice)=> totalPrice + currentPrice;\n    const total = this.props.order.map(orderItem => orderItem.price * orderItem.count).reduce(reducer,0).toFixed(2)\n    console.log(total);\n\n\n    const orderItems = this.props.order\n    .map((orderItem, index) => (\n        <li key={index} className = \"orderItem-item\" >\n        <div className=\"orderItem-div\">\n        <h3 className=\"orderItem-list-title\" name=\"title\"> {orderItem.title} </h3>\n        <span name=\"price\">${orderItem.price.toFixed(2)}</span>\n        <div className=\"orderItem-edit\">\n      <button type=\"submit\" data-title={orderItem.title} onClick={() => {\n          if(orderItem.count > 1){\n            this.props.minusOrderItem(orderItem)\n          }\n          else {\n            this.props.removeOrderItem(orderItem)\n          }\n        }\n      }>-</button>\n          <span > {orderItem.count} </span>\n        <button type=\"submit\" data-title={orderItem.title} onClick={() => this.props.addOrderItem(orderItem)}>+</button>\n        <button type=\"submit\" onClick={() => this.props.removeOrderItem(orderItem)}> Remove</button>\n      </div>\n      </div>\n         </li>\n      ))\n      return(\n\n        <div className=\"orderItem-container\">\n        <div className=\"yourOrder\">Your Order</div>\n        <ul className=\"orderItem-list\"> { orderItems } </ul>\n\n        <form className=\"order-form\">\n              <div>ORDER TOTAL: ${ total }</div>\n          <label htmlFor=\"order-name\"></label>\n        <input type=\"text\" id=\"order-name\" placeholder=\"Name\" name=\"text\" value={this.state.text} onChange={this.handleInput} required></input>\n        <button type=\"submit\" name=\"name\" onClick={this.handleSubmit}>Submit</button>\n        </form>\n        </div>\n\n      )\n    }\n  }\n\nexport default OrderContainer;\n","import {Component} from 'react';\nimport './App.css';\nimport MenuList from './components/MenuList.js';\nimport OrderContainer from './components/OrderContainer.js';\n\n\n\n\n\nclass MenuApp extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    menuItems: [],\n    order: [],\n    types: [\"All\", \"Main\", \"Soup\", \"Tea\", \"Dessert\"],\n    foodSelection: \"All\",\n  }\n  this.removeOrderItem = this.removeOrderItem.bind(this);\n  this.minusOrderItem = this.minusOrderItem.bind(this);\n  this.addOrderItem = this.addOrderItem.bind(this);\n  this.filterFood = this.filterFood.bind(this);\n}\n\n// menuItems.filter(menuItem => menuItem.price ).reduce()\n\n  componentDidMount(){\n    const menuItems = [{\n      title: \"Forest Dragon\",\n      desciption: \"Japanese matcha ad Chinese jasmine green tea with added mint, rice milk cardamom and honey\",\n      price: 5.25,\n      type: \"Tea\",\n    },{\n      title: \"Taiwanese Bubble Tea\",\n      desciption: \"Tapioca bubbles with your choice of tea and your choice of milk\",\n      price: 5.25,\n      type: \"Tea\",\n    },{\n      title: \"The Golden Ticket\",\n      desciption: \"A golden milk infusion of organic turmeric root, goji berry, coconut butter, all spice & rainbow pepper.Made with coconut, oat, or whole milk & local honey.\",\n      price: 5.00,\n      type: \"Tea\",\n    },{\n      title: \"Japanese Hotcha\",\n      desciption: \"Organic Japanese matcha green tea simmered in your choice of milk, sweetened with local honey. \",\n      price: 4.00,\n      type: \"Tea\",\n    },{\n      title: \"Tempeh Banh Mi\",\n      desciption: \"Smiling Hara tempeh marinated then grilled with gluten free bread dressed with sriracha mayo, cucumber, cilantro, carrot-daikon pickle, & baby kale. \",\n      price: 9.75,\n      type: \"Main\",\n    },{\n      title: \"The West Village Bowl \",\n      desciption: \"Jasmine rice coated with your choice of tahini or peanut sauce sprinkled with toasted seeds and garnished with baby kale, shiitake mushrooms, beets, daikon, and kimchi.\",\n      price: 12.50,\n      type: \"Main\",\n    }, {\n      title: \"Ayurvedic Kitchari \",\n      desciption: \"Tridoshic turmeric-based mung dahl and basmati rice porridge with squash & carrots, garnished with apple chutney, raisins, and green onions. Choice of coconut oil (vegan option) or Happy Cow ghee\",\n      price: 9.50,\n      type: \"Main\",\n    },{\n      title: \"Spicy Tan Tan Ramen\",\n      desciption: \"Sesame, coconut, soy-based veggie broth with chili oil, topped with grilled corn, bamboo shoots, mushrooms, and green onions. Let your server know your preferred level of spice. \",\n      price: 12.50,\n      type: \"Soup\",\n    },{\n      title: \"Miso Ramen\",\n      desciption: \"Miso broth with mushrooms, wakame seaweed and scallions. \",\n      price: 12.50,\n      type: \"Soup\",\n    },{\n      title: \"Japanese Miso\",\n      desciption: \"Sweet white organic broth with mushrooms & wakame seaweed topped with scallions. \",\n      price: 9.00,\n      type: \"Soup\",\n    },{\n      title: \"Oatmeal Cream Pie \",\n      desciption: \"Sweetened with cane sugar. Contains dairy & eggs\",\n      price: 4.00,\n      type: \"Dessert\",\n    } ,{\n      title: \"Medicine Ball\",\n      desciption: \"Honey sweetened cacao truffle with superfoods. Made by Asheville’s Silvermoon Chocolates \",\n      price: 3.75,\n      type: \"Dessert\",\n    }]\n    this.setState({ menuItems })\n  }\n\n  addOrderItem(menuItem){\n    const order = [...this.state.order];\n    const index = order.findIndex(orderItem => orderItem.title === menuItem.title);\n    if(index !== -1) {\n      // menuITem already is more at least 1\n      order[index].count += 1;//we added count as a key even tho it didn't exsit prior, because you can.... mdn\n        console.log(order);\n      // order is an array\n      // menuItem is an object\n    } else {\n      menuItem.count = 1;\n      order.push(menuItem);\n    }\n    this.setState({ order });\n  }\n\n  removeOrderItem(menuItem){\n    const order = [...this.state.order];\n    const index = order.indexOf(menuItem);\n    order.splice(index, 1);\n    this.setState({ order });\n  }\n\nminusOrderItem(menuItem){\n    console.log(menuItem);\n    const order = [...this.state.order];\n    const index = order.findIndex(orderItem => orderItem.title === menuItem.title);\n    if(index !== -1) {\n      order[index].count -= 1;\n        console.log(order);\n    } else {\n      menuItem.count = 0;\n      order.push(menuItem);\n    }\n    this.setState({ order });\n  }\n\n\n  filterFood(event){\n    const foodType = event.target.dataset.type;\n    this.setState({foodSelection: foodType})\n  }\n\n  render (){\n    const reducer = (totalPrice, currentPrice)=> totalPrice + currentPrice;\n    const total = this.state.order.map(orderItem => orderItem.price * orderItem.count).reduce(reducer,0).toFixed(2)\n\n    const menuTypes = this.state.types.map((foodtype, index) => (\n\n        <li key={index} className = \"nav-Item\" >\n        <button className=\"nav-button\" onClick={this.filterFood} data-type={foodtype}>  {foodtype} </button>\n         </li>\n      ))\n    return (\n      <>\n\n      <ul className=\"menuItem-nav\">\n<li>  <img onClick={this.filterFood} data-type=\"All\" className=\"logo\" src=\"https://images.squarespace-cdn.com/content/5cf962b426cecf0001f6c8b2/1559852836171-435VB9C0EHU5SNSNWFLL/dobra-logo.png?content-type=image%2Fpng\" alt=\"\"/> </li>\n        { menuTypes }\n        { this.state.order.length === 0\n          ?\n          <li className = \"nav-Item\"><button className=\"nav-button cart\" onClick={this.filterFood} data-type=\"Cart\">Cart </button></li>\n          :\n          <li className = \"nav-Item\"><button className=\"nav-button cart\" onClick={this.filterFood} data-type=\"Cart\">Cart ${ total } </button></li>\n        }\n\n      </ul>\n      <div className=\"imagecontainer\">\n        {\n          this.state.foodSelection === \"All\"\n          ?\n          <div className=\"imageheader\" onClick={this.filterFood} data-type=\"All\">\n            </div>\n          :\n          null\n        }\n        {this.state.foodSelection === \"Main\"\n          ?\n          <div className=\"mainheader\" onClick={this.filterFood} data-type=\"Main\">\n            </div>\n          :\n          null\n        }\n        {this.state.foodSelection === \"Dessert\"\n          ?\n          <div className=\"dessertheader\" onClick={this.filterFood} data-type=\"Dessert\">\n            </div>\n          :\n          null\n        }\n        {this.state.foodSelection === \"Soup\"\n          ?\n          <div className=\"soupheader\" onClick={this.filterFood} data-type=\"Soup\">\n            </div>\n          :\n          null\n        }\n        {this.state.foodSelection === \"Cart\"\n          ?\n          <div className=\"cartheader\" onClick={this.filterFood} data-type=\"Cart\">\n            </div>\n          :\n          null\n        }\n        {this.state.foodSelection === \"Tea\"\n          ?\n          <div className=\"teaheader\" onClick={this.filterFood} data-type=\"Tea\">\n            </div>\n          :\n          null\n        }\n\n\n      </div>\n<div className=\"container\" >\n    <MenuList foodSelection={this.state.foodSelection} menuItems={this.state.menuItems} addOrderItem={this.addOrderItem}/>\n    { this.state.foodSelection === \"Cart\"\n      ?<OrderContainer menuItems={this.state.menuItems} addOrderItem={this.addOrderItem}\n        removeOrderItem={this.removeOrderItem} minusOrderItem={this.minusOrderItem} order={this.state.order}/>\n      :\n      null\n    }\n\n    </div>\n    </>\n    )\n  }\n}\n\n\n\nexport default MenuApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MenuApp from './MenuApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode >\n    <MenuApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}